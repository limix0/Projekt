<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVIAAACVCAMAAAA9kYJlAAAABGdBTUEAALGPC/xhBQAAASNQTFRF////
        ADOZAABXAABZ/Pz88PDw5ubmAABf8/Pz6urq9vb2ADGY0dHR+fn57u7u3NzcAABk9fX6AABT4ODgACGU
        AABjysrKvr7Wzs7OgYGs5OTvAC6Xra3KACqWAABpXFuTv7+/zc3gbm6hODiAr67Fp6end3ahtbW1ACWV
        ZWWZ1tbkFBRwIiJ26urxnJycUFCNr6+vlZWVnp29ICB2yNDmhYWuqbfZAABNkZG1nKrRABWRoKDAuMPe
        Z326zNXpXHS2REOJjJ3LKip1FUCfOzuBJyd0OlmqQ0OAMFKnNk+TWGeNDw9yd32KkpafgYSJSl6Tb3mR
        eYzBNlOmjJvCusHQX3a1UWqxHEeic4e/SGGgmJ+xfYqrXnKkQWGvqa+9VlaRAAmPJTPfaQAAFihJREFU
        eF7tnXlD4sjWxiGJBk2jJA0iCQmyNA3BDD0qNsiiiKj3OvPeq3danMVhvv+neM+pqixA4S6K+vyhELLx
        42y1JAl9yJWkOo5j250dpo6tO46qSuzjD91LaqfV3b9QSnuguCd8Z4RPL9vdRsv+IHtXSXqr0T4Nl+Il
        01CU8KQUwzBL8bjZuz7ftaNsqw/xpdq755fhvakwR6QohhnfC/9odFS2+YdG1dk9v+6V4gCT8gJiYI0g
        A/BO56uY8fjgvMN28iEmtdPYV8CTkR1QLIFXl8xe7/T08rJ9vn992mNRgFEcl2KU4oOuznb2oehOd7+3
        FwdrxOxjDK7b593dFqZ2351Vx251r67DSHoKWKDa/oAKcnYBJ2T0kgGpptHqODfWR1EH8tbAhLV5WBWz
        dPXOoTo73cE//+yFr68aO/Y9EozTOr8ulQwGMijF3Ou+30wF5mn+swdFkP4gBnpjEDc5pqqUBjtslXcl
        qdMdlAbt3cdlaf1KKXGgGvHzd2eone7pdXfHYe8eI6fb40AFQ31XEVVvXLdbT2dFajfOialm791UqVLr
        vPvUka4zKDGQARnm+wioaqvReXg/hxQUW0akXsV5zt9iH79hSZ0H+LskRaPLyxHUQlC4YHk5GpUiSLcb
        ZyADUkpv307v218ENIHlwsLKyhLRYlC4YGVlBdkuR5dDDa6d2mxPH/JoujCZCMvPqNVV8u8zZbuyEInu
        7jGQARm9pygq5l+EJpoms0Hq4SD4Dw6PlAnYVVeE7FLknJOjzMH7bUhRUdskwjAJgTIazEOYlWhgBbLA
        FbF+QlGu1yYDGVDpnG37LgU4ARbJOLcVBYgeLJlgBajr6+vI1Q5zwmn8RcrTVzAyhogAJqBiC+4gEh+A
        KkBdX1tbW19f/R+vPD1+iS+Xs7Ls1csInPkOlskTocqgbmysrR1zmlHxBlt5lioLL4cUg+ODaLoCqhQq
        MN34m9OHqpT8DKXmUhNuoJeb7NUTqizegLSWm6hD9HKNvXqkxhtBD5SEUJHp142/OBkqYKaOXJmoAGyt
        zF49oW5EeihMdOnY2iF79SjdJ27eIml5ZfHzp3UwU140HXgHUmObk0jFHHv1hLoRaV6esFJbPGKvXo/A
        UAnT33nRdJet9JaRLrP/T6hoBJiubfzB8XzjmK0z/0irsVk2ByVkur7BS/p7blP/nkgDw7NT5XCzwbMh
        ndz0WbWMTP/kNaHcBHU/pOmYlWQvpymaieV53N8K0hDa6W+cAT7jmq1wP6TJs8qtSHPW20YKTFdXLyY9
        3ytNAelEmXGD46s8WmPif8W3g1RaWFw955WmrC9ajVWS42rKQaTT6+Sx34K/orsSQ8pfKS+n2bE9NeUg
        0omf3dvP7JGGpJXF3zj9+25/lGolxHHJLlI1W8+d9MvFpluIq5kymKlUrYbsQnHYzxTTZDKrmslJyWI/
        U8vCp8lqna4Mm9dyVVipibmwLNpOsl7On+Tq2QkI+YTMju1JTjCkEp7EJtsLKAv7T2cOy3U4dPYksx2r
        DoewqA7/XGUymWqarv0sWl5Z7XGC6SX9FBzfUceUpY6vprY1sTLM5WOafERDqJPYRqSCXBfkXLFYHGri
        EAzIiW3mtO1i1foOG6Y1+oM4xTNN3h4WjyxNPFFDZTllCVXYJhfTJnJcXrbZsT1lmeNv9QXhrFrMw17y
        BFNSq1Y1WCBqhZCdK/YTeCLNUBP+MqUysuj+rM+jyOL1ZDA1WE/09PSUteRylvqX3sxrRfQ9J9ZHpGJM
        Zr0AakaAdZ0zuU8MGe0vTX+QZkLMsejpNM8AaUIcsiM1ZXnsmFNjqZ4XTpJ0ZSd9oGXgZVIUU7hEor/L
        cHxfsOn2rXXJIyVF2pPBVDHpl5iKVI/JwfPKaSn46yKVvS4N1YJS24lZfhudIk0LicDmqgRWeujFv5QA
        v4i6RYWrTUOqHopb7D2qhp0PSaHK3hJNxtK0fEZjhB44whMrys1PtCN6KtIMNTZXakWG8/SQui0FxJMM
        ORYuZiJIVcu1Y1dl0e9ZssUhfGEaPkkXzTSkdVwxoCrkuKQw0qkzgbSmHbAlye/0CEX69km1y8tPtNif
        hlQ6kzO1lK9aX4Dw5CH1t2nC8kmkWTk2tttgEQXrw15sKrTvaUjzcnXkJA6E1C1I1QwL5SA1cISnVouH
        lPacTEOqyokTSJy+yhlwQRepxdYEJTUuUjGwhKgcsGzpCJAGNQVpdPIk6jcj1fNwOrMQDykrTKchjZ75
        8dKXi/SAvQfxkdqyNQbpIUhDfTnD3vq6CWk2MZIAnlENTp9pnM7lmRpLh6N90w45cRcpJmMmPlJOLA0g
        1dHxg5qGtCYn/K0gKaAL34A0LVaCqz+nuEhvSU9ZOWim+mYMU++dkUKIDWZ8yPUjSGN3ROpU5EB+Uqt4
        StORFrX8xG6eS1ykNGhPRRpqWkKNnqFk12KihUQ4jr/FTU+QrBNCmUFUk3AMaD3Rd6A7Iw0lt4UMPVHJ
        rm8KOMo6DakzpAeeja44danBkCY4Y09YvsMXL8tytVxPDaGhUtkia7mtp0B6qqOVksVMbuvJLie0k3K9
        XsxUNCz1NT/j6/Ime8WUFyeysq3l8Z9as8QDdhJWHeklR0fGqiJFavdFqxwQltHPJ4nXFcXmRqlVbLWP
        Sj9wsyY0r4/6B0O3ec3Wlg4OvKo91DxIh9Rh2e/XSHpbh7JbuYPNo2odQ0DtwLdSpzpCBRoSbinpSz9w
        bS7bxJOo1tlPkj0YyZspuqlzUB1Wg8r5p/gMcjhT+IzjyETvzofuLF4NZe4vPMNw17tRl5OdzKuVD6QP
        FyeUhkvNpYVnjTZvWjr3kp31RTL9/EMPEa8qNU4/L35Y6YN1yenaM89XP5A+WA7v+ufS3zNCyoY9nma+
        rgMar6LvMmbLVpLutO4dxOssVXprs0Ga3e5XiPLDol/qP0x22ZLl8XaXvsmdNTAq52wb/xUsTufaQ3TK
        yffmj/UZIRWrhTSqmaoIeb9J+hDl5bOtZHKs805PQGP3NulCDP8VhKfp39/hXKmjmH/PDKn3LaTmtvAY
        K7EFXl+ozumjmJBOOyWeCikvORkXa7NHij0EONjyUCWDwzOeXgCpzbvjgfnniyANOYlAF9Z9lZ4Yqka9
        ANIrTlGqhL+ufVpdirBVnlOjSKWTxO3ff5pei5XqvArK/Gtj7dPnpVm08UeR2vIjrDT7SpByJkWEFeMP
        RDqTbpMRpE7+MfnJfh1IO3scIzV+/7oxo1AaROpsVR41kqEKrwIpL90r5q8zRCpv0k72kzNZjo3PppNU
        PXgnMRyFjepkXroTuJ2TpOuwQAfHz+qwPi7C7ejpB5BC04q9CqkO7Nf/fhykeOiJxlTUOx912gx6Xt9z
        2Pz929eNGWUnQFrZ3Cba3LQSYiUXaELZ9SNL0OTKsM4WWnK0tqnJ+VQ2VPweGKlC8yx+12IxTdO+AxU1
        lRC+y/kajld5SPWieEC2iWbrw4qsidZRLskYTyC1i3nYWWIz403zhJXS5cOE9l3ezmzZofo0gx5wGk6K
        8eu3mWUn4vh48SZKVZMZUc6x8Rn7RJSLhayd3DoQBDqnz4odWalsth5LhVKByyMdCxpI2eaWnNhqNpvZ
        kHMoVtN2snYmFzykak2mQHGun3hYL8B+h7JwRv1iDGn2SLRSeOh6XxDZGJVThrVT6Ww2XbQEsVwT+cOB
        vFtxQCT98pVkp5kMPY1mfAA5FOhY+5a4nXZ9y0mJm7jQkr2WQBCpemgRam4srWs0yUnVukSRqk0XaMhO
        iCnX/9V0jI7WjiItCn2vGaYXhSPcqx0Tq54DZU/EhMxF2uHdgksJ/wp+D6F0Jn4/gTQUoi2osQk+aTKQ
        bMn0HSiINHRCkDou0mKwDYZI05bXe+BsysGArffJZMoRpAUhMEIOvy2hfiSOjmTzkUrHnNwUNv/9hfn9
        ClvvWTWJVJe3wdWqYl1i3X5EeUR4R6R6Xi6yabzwJlbp42xVpjqdguApK+O2I0gtOT1y6E1BDyUFcghP
        eoyLlO/2pz/N0u85SENDnMsQi1mxoBICWNMdkYaiNUuziklymYAei6W2/VIiI0J8DSqGk1yCSB15/NBa
        MlQfNVKcw8JBanMG78OK8ssX5vd+ifGc4iDNAxlHTqRIn5+v6Vaq9seQwiK7XtHEA0jX4PhRZ6jl6EfS
        kTjWW7UpAu4gUltO1NghXemAdOw0c5z0JPFuaxI2/vMT9fsZGSkHqS3iBPOKPIF6BOmW4KNxLDL9N4gU
        pdZlS2cZP51g96Qojl33oMs4ZSqIVJX9JOgpHZwxC1IPOVZ6znN7pfcz+v2s6nzQBFKV2lFNTgRnQekE
        SABpNhATkzLpZR5HiqZcd4sovSrU8Ctl5bPgfkNlESeojsTS6mhmtPHQTgyN2VdSnkTa4rl92PwvNdLV
        2RSloHGkWYtO2Vf7Yt7/7kmLzF0OII1ue/3N6iHtuHeRSs0iQ1KHvMSQYlV2iDtMCXm/NeHkRIJvBCmk
        nhOPqdSUBYSZFK20b2UFaxKpzr2VufmfWRspIC2zCfO2nUym+lqVxUgnIyRq0OqTHHvrREgQXwwgDSVj
        QjGdtLOF+mYFS/0A0rpgpW1Hdeox2XV8lH0gYuavyyI0fxxosyZzCa1KfrcRpCH9RIht4aF1u97XWGrL
        9rV+Lamr4DD1vHY0UepPCaSDn3+G5DRLIw1lNRFaka5itUB7tFDVEmdHhwlBi6WowSYE8o9Kr52Rbawa
        JBSC9LvGjCt7qAmxswS5Ik0XvfJHqmtDWCNbjMHHhxVRE6ss/evfyY9VwNYsSEofabEKObRVd31FbeY1
        Td48lDWtUpeSlL4vfiA1fiFGOsPkBBwKnpIT1zmqyUI9lS54mAtjBZCaLeAVlExqoeCddjZZgAYlvgou
        DdkFGi3g49RWwW3hk5Xwn17wyggdD11I+rEHhQtrdCFeJxMU7157YKT/9oz0Yx7kbUoJIz/vDm+4KWz8
        6+fZG+ncqDhaWambgSsLoGnPv7t+7/+A6GzT/RzJTsh1P8aEUrIVSOAd/q31lV+okc4y3c+T7L52Vk5n
        8YLrbGEoBroNQnqPS9T4LxKdYUfp/CmZ61sJWp+Im4HCX+3xyqewCakJc9McGOloEp6tVMfOEgWSjcot
        SMPG70DUy02v2kqdV3azaumaMxECiJ4SonORm3Ze173/o5d8opDskehc5KbGeHvgZbU/heivAbd/7bnp
        6lUh/XEj0TkpSa8D1eFLS2rzGvZhI8yIzklJ2nvJjD8qdUpmojb6ExCdj5Zo79VkfJtfjwLRn7xAOhct
        0d5reYpKCxycI/B6SpQE0sV56IDqddmLFxbvaSQgY+AS/TqrWc+P1qDNXryopPNbiWJqmo8uvYF7F9CX
        lMNPTGHz9ItHdH56SwbGyxemO2FuYgqbv3/54hOd1RyoR+t6z7vz90upwe0eDStjROdmbOQqzm5Z+VJS
        2/wwqph/fUO39210XrqdG/H4i3q+fsoPo4ry51ef6Lwke6JW3Lvz90tod0oYNXp/MKJY4q+vztP4nb6n
        9F7sbJ1LvtOHzeNvAa9HG43OjZGGQnHlxcx0mokqpb++jsbRhfmxUdC+qfRepDfK+THFRA3zz40RG523
        UftWPFx6iUbprsLPS2Fz8Mc40TkpSF2pkFzZTZVnqM7+FBNVSpcbQaLg9SvR+TJSco2mcTzbk3au4vwo
        GjaUPzdIHP1pTuMoEV7/Vrpib2Yhtct9/D3KPP17jRL94tvoHOV6V3gBnP9AqmfX7mCKz4eV+I81ZqNY
        js6rjYLIZZqzerLnzsUet0WPLdBec50QpU6/sf7p89J8Eg1F8QFVijGL7v3WcXwK0LARb69RG2VhFFL9
        UmQ+uvMmFCUXGih7z17xty6mAlVKp3/j0xyRqBtGgegchlGi5Si55l2JP++TknePp7k8Vvfn+NhBShSd
        niSm5XklGopGdDLpWIlfPlszSm2cTrVQ8Pnj31bBRL9+YUTX1gnR+YyjKGlBYtcYmc8TUKOt/T1+NzMK
        fD6Nj3F0TZQ5/ZwmJippIeJeAKvEr57cUPXuaZw79Z4ImqX/W11d94kSp5/jMEoVWYmG2KxOpTR40gpV
        3b00pxsoFE5md5U8vRWJQjFKnP7zXDs9UXRlIeQMWBPR2Lt+Ku93WvulGwwUgJbaNn1uM4ZRz0QXF+Y3
        MTFFV8BMHW+GvBG/fIK6X2r9CN/EE4DGf2TxIaPE6UEsL4HTz2MbdFRSZGlFAqZeV4YZP959TOeUpO/e
        bJ8YYZS2vUIf106IeiY6x7VTQNElHCPXXd8HGXGlvfOwr6bunB/Hb+YJQI1zOwI+75ooAUpMdK4zvS9p
        YRFncugXgR4i8MveVeue+V/tNC7D8RL3SjBfRsns6pEl30RJ5URN9M3cg3x5iQ5GnI9kZ6C6d9zt8J8Z
        PSbJ6TTap3t7pZvNk+z0tOHAAamJUqLURBeX5j8veQIzpUx3wqNIFKMUVy72u62pM3slvdNqnO9fKPGS
        Ob1aYoLdldo7EQQaMFHm8xhF3wxRYqaUqbo/0XBUDLMEzty72G93G7uuGt1uu3150QPmANO8xdeJoGgC
        A4VkuMhM9Nu3ANC3dvEyPjeZzTVsnfK6iBUFyJol4MdUKgFIIMm9uQNH4PDhqw5WFwwoEsUginke09Ly
        3A0x3SL0RdaFLjVK0wYyHirgWfoBuS4aWUGg1OcZUOrzb/H6+uWlVa8/Tb0ynxAq1g7tlhSSlheIhXpA
        gefapzcLFGwTykS/u0I/V6Z3xt1DmN4MtE80UAaU5HkKlAbRN5TnRxVdIUzdUlttDG6p128VpCPzoost
        BmnZBcqC6HsACopi+zDYIGy1ew+mCjjB3Xex9pKikQXfQsFESQhlQN+oz7taRqYjBTc0Lu9Ub44Ia669
        8H6jg00vKbpMeWKWp0A3SE5iFvqmgYLQ9yecsdPdHxh34wowIXSe7jd2aKeLa5+ex/sGSo4Sed0X1j+J
        lpEpQl2JBCOcpO9026cm1vRYiE4IK1YoVc2Ldnd3h7WzJMaTGKgLFA00AJSu+cYFdoomhVDBKaURI5L0
        1u7Vca+H9ghVPpMR7vWuL8+Rpf8jgLuP8HSBIk/Y+btweU9RaN0gU7QjQjVgrEx4X1fd11hnFVgnwUn8
        3eVJRHmSHY/4wJsXFuRoqNSYVhYigJV9dJuQJsOJ5jmNJ/5QbIv3IjRUChUIIALEyjNXXwCT0GQ4iXny
        eBIDfTceH5DXcmQcAARYa2QZwCLaoHAJsASYlCbBiebp8VxzeVKbf3cG6sprPRKqiAO4LiFZUMQTvltZ
        AZYUJqUZwEnN0+f5pvpD7y2o0N2CknEFLgTtmHApfurR9Kxz3cOJPN9fAJ0UgUqrIEDlgZ0UfjJG08VJ
        zPNd+/uYoBpitSUaKxXl5wsWAUFGk7xwabrmeY+S4T3IawGxMOkTnJTLm8BEmojzgydHXuXO8o/r6OMi
        H1GYhCaxzg+cU8QaRLRKIvnIzUhUdAl+RqsCtM131Tx6mLCWx6qJ1kyErSdcwCosUryicb7Hev4hoo0k
        QEtLUlf4HhaTdgBb80P3E2s5jYh99KG5Vyj0/14EM3VFuLZBAAAAAElFTkSuQmCC
</value>
  </data>
</root>